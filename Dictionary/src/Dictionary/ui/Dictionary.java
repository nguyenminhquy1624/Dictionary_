/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Dictionary.ui;


import Dictionary.connection.Data_connect;
import Dictionary.connection.JDBCConnection;
import com.sun.jdi.connect.spi.Connection;
import com.sun.management.VMOption;
import java.io.*;
import com.sun.speech.freetts.*;
import com.sun.speech.freetts.Voice;
import com.sun.speech.freetts.VoiceManager;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;

/**
 *
 * @author MINH QUY
 */
public class Dictionary extends javax.swing.JFrame {

    /**
     * Creates new form Dictionary
     */
    private DefaultListModel defaultListModel = new DefaultListModel();
    private Data_connect data_connect = new Data_connect();

    public Dictionary() {
        //libraries = new LibraryWord();
        initComponents();
        this.bindData();
        Search.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               
            } 
        }); 
        
        setLocationRelativeTo(null);
    }
    
    private void bindData() {
        data_connect.get_Word().stream().forEach((input) -> {
            defaultListModel.addElement(input);
        });
        FilterWord.setModel(defaultListModel);
        FilterWord.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }
    
     private void SearchFilter(String WordInputs) {
        DefaultListModel filteredItem = new DefaultListModel();
        ArrayList <String> inputs = data_connect.get_Word();
        inputs.stream().forEach((input) -> {
            String inputname = input.toString().toLowerCase();
            if(inputname.contains(WordInputs.toLowerCase())) {
                filteredItem.addElement(input);
            } 
        });
        defaultListModel = filteredItem;
        FilterWord.setModel(defaultListModel);
    }
    
    
    
   

    public void setWordInput(String WordInput) {
        this.WordInput.setText(WordInput);
    }

    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem3 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        WordInput = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        FilterWord = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Search = new javax.swing.JButton();
        Speaker = new javax.swing.JButton();
        AddWord = new javax.swing.JButton();
        FixWord = new javax.swing.JButton();
        DeleteWord = new javax.swing.JButton();
        GGTranslate = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Output = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        Exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        Help = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        Intro = new javax.swing.JMenuItem();

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DICTIONARY");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(0, 102, 255));

        WordInput.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        WordInput.setForeground(new java.awt.Color(153, 153, 153));
        WordInput.setText("Enter Use Word");
        WordInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                WordInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                WordInputFocusLost(evt);
            }
        });
        WordInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WordInputActionPerformed(evt);
            }
        });
        WordInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                WordInputKeyReleased(evt);
            }
        });

        FilterWord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FilterWordMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(FilterWord);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dictionary/ui/title.png"))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(153, 255, 51));

        Search.setBackground(new java.awt.Color(0, 255, 0));
        Search.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        Speaker.setBackground(new java.awt.Color(255, 255, 0));
        Speaker.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Speaker.setText("Speaker");
        Speaker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SpeakerActionPerformed(evt);
            }
        });

        AddWord.setBackground(new java.awt.Color(0, 255, 255));
        AddWord.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AddWord.setText("Thêm từ");
        AddWord.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        AddWord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddWordMouseClicked(evt);
            }
        });

        FixWord.setBackground(new java.awt.Color(255, 153, 153));
        FixWord.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        FixWord.setText("Sửa từ");
        FixWord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FixWordMouseClicked(evt);
            }
        });

        DeleteWord.setBackground(new java.awt.Color(204, 0, 204));
        DeleteWord.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        DeleteWord.setText("Xóa từ");
        DeleteWord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteWordMouseClicked(evt);
            }
        });
        DeleteWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteWordActionPerformed(evt);
            }
        });

        GGTranslate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        GGTranslate.setText("Translate");
        GGTranslate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GGTranslateMouseClicked(evt);
            }
        });
        GGTranslate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GGTranslateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Speaker, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddWord, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FixWord, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DeleteWord, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GGTranslate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Speaker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(AddWord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(FixWord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(DeleteWord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(GGTranslate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        Output.setColumns(20);
        Output.setRows(5);
        jScrollPane2.setViewportView(Output);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(WordInput, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(WordInput, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        File.setText("File");

        Exit.setText("Thoát");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        File.add(Exit);

        jMenuBar1.add(File);

        jMenu2.setText("Help");

        Help.setText("Hướng dẫn dùng");
        Help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpActionPerformed(evt);
            }
        });
        jMenu2.add(Help);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Intro");

        Intro.setText("Giới thiệu sản phẩm");
        Intro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IntroActionPerformed(evt);
            }
        });
        jMenu3.add(Intro);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        
        String tmp;
        tmp = WordInput.getText();
        if(tmp == "") {
            tmp = FilterWord.getSelectedValue();
        }

        Data obj = data_connect.get_Data().get(data_connect.find_position(tmp));
        
        String input = obj.getDefine();
         
        input = input.replaceAll("</?[A-Z]>", "");
        input = input.replaceAll("<br />", "\n");
        Output.setText(input);
         
         
         
    }//GEN-LAST:event_SearchActionPerformed

    private void FilterWordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FilterWordMouseClicked
        String WordInput = FilterWord.getSelectedValue();

            JOptionPane.showMessageDialog(rootPane, FilterWord.getSelectedValue() ,
                "Do you want choose word " + WordInput + " ?" ,JOptionPane.INFORMATION_MESSAGE);
        
        setWordInput(WordInput);
        
    }//GEN-LAST:event_FilterWordMouseClicked

    private void WordInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_WordInputKeyReleased
        // TODO add your handling code here:
        SearchFilter(WordInput.getText());
    }//GEN-LAST:event_WordInputKeyReleased

    
    VoiceManager freeVM;
    Voice voice;
    
    public void SpeakText(String words) {
    voice.speak(words);
    }
    
    public void TextToSpeech(String words) {
    System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
    voice = VoiceManager.getInstance().getVoice("kevin16");
    if (voice != null) {
        voice.allocate();// Allocating Voice
        try {
            voice.setRate(190);// Setting the rate of the voice
            voice.setPitch(150);// Setting the Pitch of the voice
            voice.setVolume(3);// Setting the volume of the voice
            SpeakText(words);// Calling speak() method

        } catch (Exception e1) {
            e1.printStackTrace();
        }

    } else {
        throw new IllegalStateException("Cannot find voice: kevin16");
    }
    
}
    
    
   
    private void SpeakerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SpeakerActionPerformed
        TextToSpeech(WordInput.getText());
    }//GEN-LAST:event_SpeakerActionPerformed

    
    private void AddWordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddWordMouseClicked
        // TODO add your handling code here:
        JTextField addWordTextField = new JTextField();
        JTextField adddefinitionTextField = new JTextField();
        String s_addWord = (String)JOptionPane.showInputDialog(this,"Bạn muốn thêm từ?" , "Thông báo" ,
                JOptionPane.QUESTION_MESSAGE);
        String s_addDefine = "";
        if(s_addWord!=null && s_addWord.length() > 0)
        {
            int tmp = data_connect.find_position(s_addWord);
            if(!data_connect.get_Data().get(tmp).getWord().equals(s_addWord))
            {
                s_addDefine = (String)JOptionPane.showInputDialog(this,"Mời bạn thêm nghĩa của từ" , "Thông báo" ,
                JOptionPane.QUESTION_MESSAGE);
                if( (s_addDefine != null) && (s_addDefine.length() > 0))
                {
                    Data obj = new Data(s_addWord,s_addDefine);
                    if(tmp == data_connect.get_size() - 1 && s_addWord.compareTo(data_connect.get_Data().get(tmp).getWord()) > 0)
                    tmp++;
                    data_connect.add_Data(tmp, obj);
                    data_connect.add_data_to_db(obj);
                    FilterWord.setModel(defaultListModel);
                    defaultListModel.addElement(obj.getWord());  
                    JOptionPane.showMessageDialog(this, "Đã thêm từ thành công", "Thông báo" ,JOptionPane.INFORMATION_MESSAGE);     
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Từ này đã có trong từ điển", "Thông báo" ,JOptionPane.INFORMATION_MESSAGE);
            }
        }

    }//GEN-LAST:event_AddWordMouseClicked

    private void FixWordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FixWordMouseClicked
        // TODO add your handling code here:
        String s_fixOldWord = (String)JOptionPane.showInputDialog(this,"Từ bạn muốn sửa :" , "Thông báo" ,
                JOptionPane.QUESTION_MESSAGE);
        if(s_fixOldWord!=null && s_fixOldWord.length() > 0)
        {
            int tmp = data_connect.find_position(s_fixOldWord);
            if(!data_connect.get_Data().get(tmp).getWord().equals(s_fixOldWord))
            {
                JOptionPane.showMessageDialog(this, "Từ này không có trong từ điển.", "Thông báo" ,JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
                String s_fixNewWord = (String)JOptionPane.showInputDialog(this,"Mời bạn sửa lại từ :" , "Thông báo" ,JOptionPane.QUESTION_MESSAGE);
                // chỗ này để xử lý khi sửa từ khi có tin vào
                String s_fixDefineNewWord = (String)JOptionPane.showInputDialog(this, "Mời bạn định nghĩa lại từ :" , "Thông báo" ,JOptionPane.QUESTION_MESSAGE);
                if(data_connect.edit_Data(tmp, s_fixNewWord, s_fixDefineNewWord))
                {
                    data_connect.edit_data_to_db(s_fixOldWord, s_fixNewWord, s_fixDefineNewWord);
                    JOptionPane.showMessageDialog(this, "Đã sửa từ thành công.", "Thông báo" ,JOptionPane.INFORMATION_MESSAGE);
                    defaultListModel.setElementAt(data_connect.get_Data().get(tmp).getWord(), tmp);
                    FilterWord.setModel(defaultListModel);
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Bạn đã không sửa từ.", "Thông báo" ,JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_FixWordMouseClicked

    private void DeleteWordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteWordMouseClicked
        // TODO add your handling code here:
        JTextField deleteWordTextField = new JTextField();
        String s = (String)JOptionPane.showInputDialog(this, "Do you want delete word?" , "Thông báo" ,
               JOptionPane.QUESTION_MESSAGE);
        
        /* hoạt động xóa từ ra khỏi danh sách*/
        // thông báo đã thêm từ thành công
        if(s != null && s.length() > 0) 
        {
            int tmp = data_connect.delete_Data(s);
            if(tmp != -1)
            {
                
                defaultListModel.remove(tmp);
                data_connect.delete_data_from_db(s);
                FilterWord.setModel(defaultListModel);
                JOptionPane.showMessageDialog(this, "Đã xóa từ thành công", "Thông báo" ,JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Từ này không có trong từ điển", "Thông báo" ,JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_DeleteWordMouseClicked

    private void WordInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WordInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_WordInputActionPerformed

    private void DeleteWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteWordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteWordActionPerformed

    private void GGTranslateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GGTranslateMouseClicked
        
        
        
    }//GEN-LAST:event_GGTranslateMouseClicked

    private void GGTranslateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GGTranslateActionPerformed
        
        
        try {
            String word = WordInput.getText();
            Translate translate = new Translate();
            String s = translate.translate("en", "vi", word );
            Output.setText(s);
        } catch (IOException ex) {
            Logger.getLogger(Dictionary.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GGTranslateActionPerformed

    private void WordInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_WordInputFocusGained
        if(WordInput.getText().equals("Enter Use Word") ) {
            WordInput.setText("");
            WordInput.setForeground(Color.BLUE);
        }
    }//GEN-LAST:event_WordInputFocusGained

    private void WordInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_WordInputFocusLost
        if(WordInput.getText().equals("")) {
            WordInput.setText("Enter Use Word");
            WordInput.setForeground(Color.BLUE);
        }
    }//GEN-LAST:event_WordInputFocusLost

    
    // Set images Intro product
    
    private void IntroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IntroActionPerformed
        ButtonIntro buttonIntro = new ButtonIntro(this,true);
        buttonIntro.setLocationRelativeTo(null);
        buttonIntro.setVisible(true);
        
    }//GEN-LAST:event_IntroActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    
    // Set images help
    
    private void HelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpActionPerformed
        
        ButtonHelp buttonHelp = new ButtonHelp(this,true);
        buttonHelp.setLocationRelativeTo(null);
        buttonHelp.setVisible(true);
        
    }//GEN-LAST:event_HelpActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        ;
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dictionary().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddWord;
    private javax.swing.JButton DeleteWord;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenu File;
    private javax.swing.JList<String> FilterWord;
    private javax.swing.JButton FixWord;
    private javax.swing.JButton GGTranslate;
    private javax.swing.JMenuItem Help;
    private javax.swing.JMenuItem Intro;
    private javax.swing.JTextArea Output;
    private javax.swing.JButton Search;
    private javax.swing.JButton Speaker;
    private javax.swing.JTextField WordInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
